{"version":3,"sources":["../../../src/snake-game/game-controller.directive.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CACF,MAAM,CAAC,OAAO,CAAC,CACf,SAAS,CAAC,gBAAgB,EAAE,uBAAuB,CAAC,CAAC;;AAE1D,SAAS,uBAAuB,CAAC,SAAS,EAAE;;AAExC,WAAO;AACH,kBAAU,EAAG,qBAAqB;AAClC,eAAO,EAAG,cAAc;AACxB,oBAAY,EAAG,KAAK;AACpB,YAAI,EAAE,IAAI;KACb,CAAC;;AAEF,aAAS,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE;AACzC,gBAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;;AAE9B,iBAAS,OAAO,CAAC,KAAK,EAAC;AACnB,gBAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;AAC5B,gBAAI,SAAS,GAAG,IAAI,CAAC;;AAErB,oBAAQ,OAAO;AACX,qBAAK,EAAE;AACH,6BAAS,GAAG,IAAI,CAAC;AACjB,0BAAM;AAAA,AACV,qBAAK,EAAE;AACH,6BAAS,GAAG,OAAO,CAAC;AACpB,0BAAM;AAAA,AACV,qBAAK,EAAE;AACH,6BAAS,GAAG,MAAM,CAAC;AACnB,0BAAM;AAAA,AACV,qBAAK,EAAE;AACH,6BAAS,GAAG,MAAM,CAAC;AACnB,0BAAM;AAAA,aACb;;AAED,gBAAI,OAAO,KAAK,EAAE,EAAE;AAChB,mBAAG,CAAC,WAAW,EAAE,CAAC;AAClB,uBAAO;aACV;;AAED,0BAAc,CAAC,SAAS,CAAC,CAAC;SAC7B;;AAED,iBAAS,cAAc,CAAC,SAAS,EAAE;AAC/B,gBAAI,WAAW,CAAC;;AAEhB,oBAAQ,SAAS;AACb,qBAAK,MAAM;AACP,+BAAW,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;AACjC,0BAAM;AAAA,AACV,qBAAK,MAAM;AACP,+BAAW,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;AAChC,0BAAM;AAAA,AACV,qBAAK,OAAO;AACR,+BAAW,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;AAChC,0BAAM;AAAA,AACV,qBAAK,IAAI;AACL,+BAAW,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;AACjC,0BAAM;AAAA,aACb;AACD,qBAAS,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;SACzC;KAGJ;CACJ","file":"game-controller.directive.es5.js","sourcesContent":["'use strict';\r\n\r\nangular\r\n    .module('snake')\r\n    .directive('gameController', gameControllerDirective);\r\n\r\nfunction gameControllerDirective(gameState) {\r\n\r\n    return {\r\n        controller : 'SnakeByteController',\r\n        require : 'gameControls',\r\n        controllerAs : 'sbc',\r\n        link: link\r\n    };\r\n\r\n    function link($scope, $element, $attrs, sbc) {\r\n        $element.on('keyup', onKeyup);\r\n        \r\n        function onKeyup(event){\r\n            var keyCode = event.keyCode;\r\n            var direction = 'up';\r\n    \r\n            switch (keyCode) {\r\n                case 38:\r\n                    direction = 'up';\r\n                    break;\r\n                case 39:\r\n                    direction = 'right';\r\n                    break;\r\n                case 40:\r\n                    direction = 'down';\r\n                    break;\r\n                case 37:\r\n                    direction = 'left';\r\n                    break;\r\n            }\r\n    \r\n            if (keyCode === 32) {\r\n                sbc.togglePause();\r\n                return;\r\n            }\r\n    \r\n            setNextAdvance(direction);\r\n        }\r\n\r\n        function setNextAdvance(direction) {\r\n            var nextAdvance;\r\n    \r\n            switch (direction) {\r\n                case 'left':\r\n                    nextAdvance = [-1, 0, direction];\r\n                    break;\r\n                case 'down':\r\n                    nextAdvance = [0, 1, direction];\r\n                    break;\r\n                case 'right':\r\n                    nextAdvance = [1, 0, direction];\r\n                    break;\r\n                case 'up':\r\n                    nextAdvance = [0, -1, direction];\r\n                    break;\r\n            }\r\n            gameState.setNextAdvance(nextAdvance);\r\n        }\r\n        \r\n\r\n    }\r\n}"]}